name: Platform

on:
  push:
    branches:
      - master
    paths:
      - "CDK/lib/platform/**"
  workflow_dispatch:

jobs:
  platform-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials (IAM Role)
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsAdminRole
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          cd CDK
          npm install @aws-sdk/client-s3
          npm ci

      - name: Check if CDK is Bootstrapped
        run: |
          if ! aws cloudformation describe-stacks --stack-name CDKToolkit &> /dev/null; then
            echo "Bootstrapping CDK..."
            npx cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.AWS_REGION }}
          else
            echo "CDK already bootstrapped."
          fi

      - name: Deploy Auth Stack
        run: |
          echo "Deploying Auth Stack..."
          cd CDK
          npx cdk deploy AuthStack --require-approval never

      - name: Deploy Amplify Stack
        run: |
          echo "Deploying Amplify Stack..."
          cd CDK
          npx cdk deploy AmplifyStack --require-approval never

      - name: Deploy Data Ingestion Stack
        run: |
          echo "Deploying Data Ingestion Stack..."
          cd CDK
          npx cdk deploy DataIngestionStack --require-approval never

      - name: Deploy Data Analytics Stack
        run: |
          echo "Deploying Data Analytics Stack..."
          cd CDK
          npx cdk deploy DataAnalyticsStack --require-approval never

      # Step to get the outputs of the CDK stack
      - name: Get CDK Stack Outputs
        run: |
          aws cloudformation describe-stacks --stack-name DataIngestionStack --query 'Stacks[0].Outputs' --output table
