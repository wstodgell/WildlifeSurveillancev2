name: Deploy

on:
  push:
    branches:
      - master
    paths-ignore:
      - "CDK/lib/platform/**"
      - ".github/workflows/platform.yml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsAdminRole
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Force Install Correct AWS CDK CLI
        run: |
          npm uninstall -g aws-cdk
          npm install -g aws-cdk@latest
          cdk --version  # Verify the installed version

      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          cd CDK
          npm install @aws-sdk/client-s3
          npm ci

      - name: Synthesize CDK Stack
        run: |
          cd CDK
          npx cdk synth || echo "Synthesis failed"

      - name: Bootstrap CDK Environment
        run: |
          cd CDK
          echo bootstrapping aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.AWS_REGION }}
          npx cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.AWS_REGION }}

      - name: Deploy Configuration Stack
        run: |
          cd CDK
          npx cdk deploy ConfigurationStack --require-approval never

      - name: Deploy ECR Stack
        run: |
          cd CDK
          npx cdk deploy EcrStack --require-approval never

      - name: Deploy ECS Stack
        run: |
          cd CDK
          export AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
          export AWS_REGION=${{ secrets.AWS_REGION }}
          npx cdk deploy EcsStack --require-approval never

      - name: Deploy IoT Stack
        run: |
          cd CDK
          npx cdk deploy IotCodeStack --require-approval never
